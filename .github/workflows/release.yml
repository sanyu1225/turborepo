name: Release

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup pnpm 8
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: pnpm i

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Print version if a publish happens
        if: steps.changesets.outputs.published == 'true'
        run: echo "A new version of ${GITHUB_REPOSITORY} was published! ${{ steps.changesets.outputs.publishedPackages }}! ${{ steps.changesets.outputs.publishedPackages[0].version }} ðŸš€"

      - name: set version in variables
        id: print
        run:  PACKAGE_VERSION=$(cat ${PACKAGE_JSON_PATH}/package.json | jq '.version' | tr -d '"') 
              echo "current-version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
              echo " ${{ steps.package-version.outputs.current-version}}. ~~~ "
